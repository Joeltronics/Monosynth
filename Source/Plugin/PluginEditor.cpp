/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"
#include "Utils/Logger.h"

using namespace juce;

//==============================================================================
MonosynthAudioProcessorEditor::MonosynthAudioProcessorEditor (MonosynthAudioProcessor& p)
    : AudioProcessorEditor (&p), processor (p), mainGui (p)
{
	LOG("Constructing AudioProcessorEditor");
	
	// Make sure that before the constructor has finished, you've set the
    // editor's size to whatever you need it to be.
    //setSize (400, 300);
	setSize(mainGui.getWidth(), mainGui.getHeight());

	LOG("Adding MainGui");

	addAndMakeVisible(&mainGui);

	LOG("Constructing AudioProcessorEditor complete");
}

MonosynthAudioProcessorEditor::~MonosynthAudioProcessorEditor()
{
}

//==============================================================================
void MonosynthAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::white);

    g.setColour (Colours::black);
    g.setFont (15.0f);
    g.drawFittedText ("Hello World!", getLocalBounds(), Justification::centred, 1);
}

void MonosynthAudioProcessorEditor::resized()
{
    // This is generally where you'll want to lay out the positions of any
    // subcomponents in your editor..
}
